/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <vector>

class DPreparingBoxes {
public:
    void solve(std::istream& in, std::ostream& out) {
        long long n;
        std::vector<int> ans, a(200020), b(200020);
        in >> n;
        for(int i = 0; i < n; i++){
            in >> a[i];
        }
        for(int i = n-1; i >= 0; i--){
            int count = 0;
            for(int j = 2*(i+1); j <= n; j += (i+1)){
                count += b[j-1];
            }
            if((count % 2) != a[i]){
                b[i] = 1;
                ans.push_back(i+1);
            }
        }
        out << ans.size() << std::endl;
        for(auto i : ans){
            out << i << " ";
        }
        out << std::endl;
    }
};


int main() {
    DPreparingBoxes solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
